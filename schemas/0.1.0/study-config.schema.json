{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "/schemas/0.1.0/study-config",
    "title": "study-config.json",
    "description": "A Boa study template configuration file.",
    "type": "object",
    "required": [
        "datasets",
        "queries",
        "$schema"
    ],
    "additionalProperties": false,
    "properties": {
        "datasets": {
            "description": "List of all datasets used in the study.",
            "type": "object",
            "additionalProperties": false,
            "minProperties": 1,
            "default": {
                "": ""
            },
            "propertyNames": {
                "type": "string",
                "minLength": 1
            },
            "patternProperties": {
                ".+": {
                    "description": "A mapping of a name used in the config for a dataset to the actual Boa dataset name.",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "queries": {
            "description": "A list of all the Boa queries to run and where to store the outputs.",
            "type": "object",
            "additionalProperties": false,
            "minProperties": 1,
            "default": {
                ".txt": {
                    "query": "queries/.boa",
                    "dataset": "",
                    "csv": {
                        "output": ".csv"
                    }
                }
            },
            "propertyNames": {
                "type": "string",
                "minLength": 1
            },
            "patternProperties": {
                ".+\\.txt$": {
                    "description": "An output generated by a Boa query.",
                    "type": "object",
                    "required": [
                        "query",
                        "dataset"
                    ],
                    "default": {
                        "query": ".boa",
                        "dataset": ""
                    },
                    "additionalProperties": false,
                    "properties": {
                        "query": {
                            "description": "The path to the Boa query file.  File must live in boa/ (but do not include the prefix here).",
                            "type": "string",
                            "default": ".boa",
                            "pattern": "^.+\\.boa$"
                        },
                        "dataset": {
                            "description": "The study name of the dataset to query, as defined in \"datasets\".",
                            "type": "string",
                            "minLength": 1
                        },
                        "substitutions": {
                            "description": "(optional) Local query template substitutions.  These can override any global substitutions of the same target.",
                            "$ref": "#/$defs/substitutions"
                        },
                        "make_public": {
                            "description": "(optional) If the job should be marked as public or not. Defaults to true.",
                            "type": "boolean",
                            "default": true
                        },
                        "gendupes": {
                            "description": "(optional) If this query built a hashes file, process it to generate a dupes file.",
                            "type": "object",
                            "required": [
                                "output"
                            ],
                            "default": {
                                "output": ".txt"
                            },
                            "additionalProperties": false,
                            "properties": {
                                "output": {
                                    "description": "Path to store the generated TXT file.  Must live in data/txt/ (but do not include the prefix here).",
                                    "type": "string",
                                    "default": ".txt",
                                    "pattern": "^.+\\.txt$"
                                },
                                "csv": {
                                    "description": "(optional) Path to store the converted CSV file.  Must live in data/csv/ (but do not include the prefix here).",
                                    "type": "string",
                                    "default": ".csv",
                                    "pattern": "^.+\\.csv$"
                                }
                            }
                        },
                        "csv": {
                            "description": "(optional) Convert the Boa query output to CSV format.",
                            "type": "object",
                            "required": [
                                "output"
                            ],
                            "default": {
                                "output": ".csv"
                            },
                            "additionalProperties": false,
                            "properties": {
                                "output": {
                                    "description": "Path to store the converted CSV file.  Must live in data/csv (but do not include the prefix here).",
                                    "type": "string",
                                    "default": ".csv",
                                    "pattern": "^.+\\.csv$"
                                },
                                "test": {
                                    "description": "(optional) Adds pattern(s) to test if a column is done or not.",
                                    "type": "array",
                                    "default": [ "index,regex" ],
                                    "items": {
                                        "description": "Patterns must be of the form \"index,regex\" where index is the 1-based column index and regex indicates when the column is finished.",
                                        "type": "string",
                                        "default": "index,regex",
                                        "minLength": 1
                                    }
                                },
                                "drop": {
                                    "description": "(optional) Drops 0-based index column(s) from the output file.",
                                    "type": "array",
                                    "default": [ 0 ],
                                    "items": {
                                        "description": "The column index to drop when making the CSV.",
                                        "type": "number",
                                        "default": 0,
                                        "minLength": 1
                                    }
                                },
                                "header": {
                                    "description": "(optional) Adds a CSV header row (including commas and quotes where necessary) to the generated file.",
                                    "default": "\"var\",\"index\",\"value\"",
                                    "type": "string"
                                },
                                "index": {
                                    "description": "(optional) A hint indicating how many index columns to expect. Useful if the converter is having problems.",
                                    "default": 2,
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            }
        },
        "substitutions": {
            "description": "(optional) Global query template substitutions.",
            "$ref": "#/$defs/substitutions"
        },
        "analyses": {
            "description": "List of all analyses used in the study.",
            "type": "object",
            "additionalProperties": false,
            "minProperties": 1,
            "propertyNames": {
                "type": "string",
                "minLength": 1
            },
            "patternProperties": {
                ".+\\.py$": {
                    "description": "A Python script to analyze the data.",
                    "type": "object",
                    "required": [
                        "input"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "input": {
                            "description": "All paths to CSV files used as input to the analysis.",
                            "type": "array",
                            "default": [ ".csv" ],
                            "items": {
                                "description": "A CSV file used as input to the analysis.  Must live in data/csv (but do not include the prefix here).",
                                "type": "string",
                                "default": ".csv",
                                "pattern": "^.+\\.csv$",
                                "minLength": 1
                            }
                        }
                    }
                }
            }
        },
        "$schema": {
            "description": "study-config JSON schema",
            "type": "string",
            "pattern": "^schemas/\\d+\\.\\d+\\.\\d+/study-config.schema.json$"
        }
    },
    "$defs": {
        "substitutions": {
            "type": "array",
            "default": [
                {
                    "target": "<<TODO>>",
                    "file": ".boa"
                }
            ],
            "items": {
                "description": "A template substitution",
                "type": "object",
                "required": [
                    "target"
                ],
                "oneOf": [
                    {
                        "required": [
                            "replacement"
                        ]
                    },
                    {
                        "required": [
                            "file"
                        ]
                    }
                ],
                "additionalProperties": false,
                "properties": {
                    "target": {
                        "description": "A target in the template to substitute.  Targets can contain alpha-numeric characters, or the following special characters: .-_:",
                        "type": "string",
                        "pattern": "^{@[-a-zA-Z0-9_.:]+@}$",
                        "minLength": 5
                    },
                    "replacement": {
                        "description": "A string to replace the target with.",
                        "type": "string"
                    },
                    "file": {
                        "description": "Load a query snippet and replace the target with the file contents.",
                        "type": "string",
                        "minLength": 1
                    }
                }
            }
        }
    }
}